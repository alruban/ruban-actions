name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      create-backup:
        required: false
        type: boolean
        default: false

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - id: get_env_key
        run: |
          wget https://github.com/sclevine/yj/releases/download/v5.1.0/yj-linux-amd64 -O yj
          chmod +x ./yj
          env_key=$(
            echo "SHOPIFY_${{ inputs.environment }}" | tr a-z A-Z
          )
          echo $env_key
          echo "env_key=$env_key" >> $GITHUB_OUTPUT
      - name: Create matrix
        id: set-matrix
        run: |
          matrix=$((
            echo '${{ vars[steps.get_env_key.outputs.env_key] }}' | ./yj -tj
          ) | jq '.[]' | jq -n -c '.include |= [inputs]')
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  deploy:
    runs-on: ubuntu-latest
    needs: prepare
    environment: ${{ inputs.environment }}
    env:
      ENVIRONMENT_NAME: ${{ inputs.environment }}
      GITHUB_TOKEN: ${{ github.token }}
      BUILD_MANIFEST: assets/__manifest.json
      BUILD_MANIFEST_OLD: assets/__manifest
      SHOPIFY_CLI_TTY: 0
      SHOPIFY_CLI_NO_ANALYTICS: true
      SHOPIFY_FLAG_PATH: ${{ github.workspace }}/dist
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Prepare
        uses: alruban/shopify-actions/.github/actions/cache-and-install@main
        with:
          build: true
      - name: Deploy theme
        uses: alruban/shopify-actions/.github/actions/theme-deploy@main
        with:
          create-backup: ${{ inputs.create-backup }}
        env:
          SHOPIFY_FLAG_STORE: "${{ matrix.store }}"
          SHOPIFY_FLAG_THEME_ID: "${{ matrix.theme_id }}"
          SHOPIFY_CLI_THEME_TOKEN: "${{ secrets[matrix.password] }}"
        timeout-minutes: 30
